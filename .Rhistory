library(dplyr)
raw_data = read.csv('~/Downloads/Monefy.Data.12-31-17.csv')
raw_data
raw_data %>% View()
raw_data %>% str()
raw_data = read.csv('~/Downloads/Monefy.Data.12-31-17.csv', stringsAsFactors = F)
raw_data %>% str
raw_data %>% mutate(date = as.POSIXct(date))
raw_data$date[1]
raw_data %>% strptime(format = '%d/%m/%y')
raw_data$date %>% strptime(format = '%d/%m/%y')
?strptime
raw_data$date
raw_data$date %>% strptime(format = '%d/%m/%Y')
raw_data %>% str
(raw_data$amount == raw_data$converted.amount) %>% all
(raw_data$currency.1 == raw_data$currency) %>% all
raw_data <- read.csv('~/Downloads/Monefy.Data.12-31-17.csv', stringsAsFactors = F)
raw_data <- raw_data %>%
select(date, account, category, amount, description) %>%
mutate(date = strptime(date, format = '%d/%m/%Y')) %>%
mutate(amount = as.numeric(amount)*-1)
raw_data <- raw_data %>%
select(day = date, account, category, amount, description) %>%
mutate(day = strptime(day, format = '%d/%m/%Y')) %>%
mutate(amount = as.numeric(amount)*-1)
raw_data <- raw_data %>%
select(date, account, category, amount, description) %>%
mutate(date = strptime(x = date, format = '%d/%m/%Y')) %>%
mutate(amount = as.numeric(amount)*-1)
raw_data %>%
mutate(date = strptime(date, format = '%d/%m/%Y'))
strptime(raw_data$date, format = '%d/%m/%Y'))
strptime(raw_data$date, format = '%d/%m/%Y')
raw_data %>%
mutate(date = strptime(raw_data$date, format = '%d/%m/%Y'))
raw_data %>%
mutate(date = strptime(raw_data$date, format = '%d/%m/%Y') %>% as.POSIXct())
raw_data <- raw_data %>%
select(date, account, category, amount, description) %>%
mutate(date = as.POSIXct(strptime(date, format = '%d/%m/%Y'))) %>%
mutate(amount = as.numeric(amount)*-1)
raw_data <- read.csv('~/Downloads/Monefy.Data.12-31-17.csv', stringsAsFactors = F)
raw_data %>%
select(date, account, category, amount, description)
raw_data %>%
select(date, account, category, amount, description) %>%
mutate(date = as.POSIXct(strptime(date, format = '%d/%m/%Y')))
raw_data %>% str
raw_data$amount
raw_data$amount %>% as.character()
raw_data$amount %>% as.numeric()
raw_data$amount
raw_data <- raw_data %>%
select(date, account, category, amount, description) %>%
mutate(date = as.POSIXct(strptime(date, format = '%d/%m/%Y'))) %>%
mutate(amount = as.numeric(str_replace_all(amount, ',', ''))*-1)
library(stringr)
raw_data <- raw_data %>%
select(date, account, category, amount, description) %>%
mutate(date = as.POSIXct(strptime(date, format = '%d/%m/%Y'))) %>%
mutate(amount = as.numeric(str_replace_all(amount, ',', ''))*-1)
raw_data %>% View()
clean_data <- raw_data %>%
select(date, account, category, amount, description) %>%
mutate(date = as.POSIXct(strptime(date, format = '%d/%m/%Y'))) %>%
mutate(amount = as.numeric(str_replace_all(amount, ',', ''))*-1)
clean_data %>% group_by(account, category) %>% summarise(total_amount = sum(amount)) %>% ungroup()
clean_data %>% View()
raw_data <- read.csv('~/Downloads/Monefy.Data.12-31-17.csv', stringsAsFactors = F)
clean_data <- raw_data %>%
select(date, account, category, amount, description) %>%
mutate(date = as.POSIXct(strptime(date, format = '%d/%m/%Y'))) %>%
mutate(amount = as.numeric(str_replace_all(amount, ',', ''))*-1)
clean_data %>% group_by(account, category) %>% summarise(total_amount = sum(amount)) %>% ungroup()
ggplot2::ggplot(clean_data %>% filter(account == 'Regular', category == 'Eating out')) +
ggplot2::geom_bar()
?ggplot
ggplot2::ggplot(clean_data %>% filter(account == 'Regular', category == 'Eating out')) +
ggplot2::geom_bar(aes(x = date, y = amount))
library(ggplot2)
ggplot(clean_data %>% filter(account == 'Regular', category == 'Eating out')) +
geom_bar(aes(x = date, y = amount))
ggplot(clean_data %>% filter(account == 'Regular', category == 'Eating out')) +
geom_bar(aes(x = date, y = amount), stat = 'identity')
plot_data = clean_data %>% filter(account == 'Regular', category == 'Eating out') %>%
mutate(month = lubridate::floor_date(date, 'months')) %>%
group_by(month) %>%
summarise(amount = sum(amount)) %>%
ungroup()
ggplot(plot_data) +
geom_bar(aes(x = date, y = amount), stat = 'identity')
plot_data
ggplot(plot_data) +
geom_bar(aes(x = month, y = amount), stat = 'identity')
plot_data
plot_data %>% View()
saveRDS(clean_data. 'inst/data/clean_data.rds')
saveRDS(clean_data, 'inst/data/clean_data.rds')
saveRDS(clean_data, 'inst/data/clean_data.rds')
ggplot(plot_data) +
geom_bar(aes(x = month, y = amount), stat = 'identity', color = 'green')
ggplot(plot_data) +
geom_bar(aes(x = month, y = amount), stat = 'identity', color = 'smokeblue')
ggplot(plot_data) +
geom_bar(aes(x = month, y = amount), stat = 'identity', color = 'gunsmoke')
ggplot(plot_data) +
geom_bar(aes(x = month, y = amount), stat = 'identity', color = 'blue')
ggplot(plot_data) +
geom_bar(aes(x = month, y = amount), stat = 'identity', fill = 'blue')
ggplot(plot_data) +
geom_bar(aes(x = month, y = amount), stat = 'identity', fill = 'steelblue')
devtools::document()
devtools::document()
devtools::document()
library(monefystats)
library(monefystats)
devtools::load_all(".")
read_and_clean('~/Downloads/Monefy.Data.12-31-17.csv')
str_replace_all('~/Downloads/Monefy.Data.12-31-17.csv', '.csv', '_clean.csv')
'~/Downloads/Monefy.Data.12-31-17.csv' %>% basename()
devtools::load_all(".")
read_and_clean('~/Downloads/Monefy.Data.12-31-17.csv')
devtools::load_all(".")
read_and_clean('~/Downloads/Monefy.Data.12-31-17.csv')
devtools::load_all(".")
read_and_clean('~/Downloads/Monefy.Data.12-31-17.csv')
devtools::load_all(".")
read_and_clean('~/Downloads/Monefy.Data.12-31-17.csv')
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
plot_expense_trend('Eating out')
devtools::load_all(".")
plot_expense_trend('Eating out')
plot_data = clean_data %>% filter(account == account, category == category) %>%
mutate(month = lubridate::floor_date(date, bin_by)) %>%
group_by(month) %>%
summarise(amount = sum(amount)) %>%
ungroup()
plot_data
clean_data %>% filter(account == account, category == category)
plot_expense_trend('Eating out')
category
account
clean_data$category[2]
clean_data$category
clean_data$category[993]
clean_data$category[993]==category
devtools::load_all(".")
plot_expense_trend('Eating out')
devtools::load_all(".")
all_categories()
devtools::load_all(".")
all_accounts()
devtools::load_all(".")
all_categories()
devtools::load_all(".")
all_categories()
all_accounts()
plot_expense_trend("Entertainment")
plot_expense_trend("Food")
plot_expense_trend("Travel")
plot_expense_trend("Clothes")
plot_expense_trend("Random")
plot_expense_trend("Entertainment")
plot_expense_trend("Eating out")
plot_expense_trend("Eating out", bin_by = 'week')
plot_expense_trend("Eating out", bin_by = 'year')
plot_expense_trend("Entertainment")
devtools::load_all(".")
plot_expense_trend(c("Entertainment","Eating out"))
devtools::load_all(".")
plot_expense_trend(c("Entertainment","Eating out"))
devtools::load_all(".")
plot_expense_trend(c("Entertainment","Eating out"))
clean_data %>% filter(account == account_to_filter, category %in% paste(category_to_plot, collapse = '|'))
paste(category_to_plot, collapse = '|')
plot_data = clean_data %>% filter(account == account_to_filter, category %in% category_to_plot) %>%
mutate(month = lubridate::floor_date(date, bin_by)) %>%
group_by(month) %>%
summarise(amount = sum(amount)) %>%
ungroup()
ggplot(plot_data) +
geom_bar(aes(x = month, y = amount), stat = 'identity', fill = 'steelblue')
plot_data
clean_data %>% filter(account == account_to_filter, category %in% category_to_plot)
devtools::load_all(".")
devtools::load_all(".")
plot_expense_trend(c("Entertainment","Eating out"))
plot_data = clean_data %>% filter(account == account_to_filter, category %in% category_to_plot)
plot_data %>% filter(date>'2017-06-01')
plot_data %>% filter(date>'2017-06-01') ->a
cor(a %>% filter(category == 'Eating out') %>% pull(amount))
a %>% filter(category == 'Eating out') %>% pull(amount)
cor(a %>% filter(category == 'Eating out') %>% pull(amount), a %>% filter(category == 'Entertainment') %>% pull(amount))
a %>% filter(category == 'Eating out') %>% pull(amount)
a %>% filter(category == 'Entertainment') %>% pull(amount)
a
a %>% tidyr::spread('category')
a %>% tidyr::spread(category)
a %>% tidyr::spread(key = category)
a %>% tidyr::spread(value = 'category')
a %>% tidyr::spread(value = category)
plot_data = clean_data %>% filter(account == account_to_filter, category %in% category_to_plot) %>%
mutate(month = lubridate::floor_date(date, bin_by)) %>%
group_by(month, category) %>%
summarise(amount = sum(amount)) %>%
ungroup()
plot_data
plot_data %>% filter(date > '2017-06-01') -> a
plot_data %>% filter(month > '2017-06-01') -> a
cor(a %>% filter(category == 'Eating out') %>% pull(amount), a %>% filter(category == 'Entertainment') %>% pull(amount))
a
a %>% arrange(category, month)
devtools::load_all(".")
plot_expense_trend(c("Entertainment","Eating out"))
plot_expense_trend("Entertainment")
plot_expense_trend("Eating out")
devtools::load_all(".")
devtools::load_all(".")
devtools::document()
plot_expense_frequency('Entertainment')
plot_expense_frequency('Eating out')
devtools::load_all(".")
plot_expense_mean('ENtertainment')
plot_expense_mean('Entertainment')
plot_expense_mean('Eating out')
plot_expense_mean('transport')
plot_expense_mean('Transport')
plot_expense_frequency('Transport')
plot_expense_trend('Transport')
plot_expense_trend('Random')
readChar('~/Downloads/Database/Transactions1')
readChar('~/Downloads/Database/Transactions1', 10000)
readChar('~/Downloads/Database/Transactions1', nchars = 10000)
readChar('~/Downloads/Database/Transactions6', nchars = 10000)
readChar('~/Downloads/Database/Transactions6', nchars = 1000)
readChar('~/Downloads/Database/Transactions6')
?read_csv
??read_csv
library('readr')
readChar('~/Downloads/Database/Transactions6')
readChar('~/Downloads/Database/Transactions6', nchars = 1)
readChar('~/Downloads/Database/Transactions6', nchars = 2)
readLines('~/Downloads/Database/Transactions6')
readBin('~/Downloads/Database/Transactions6')
readBin('~/Downloads/Database/Transactions6', what = 'raw')
readBin('~/Downloads/Database/Transactions6', what = 'character')
readBin('~/Downloads/Database/Transactions6', what = 'raw')
readBin('~/Downloads/Database/Transactions6', what = 'character') %>% strtoi()
readBin('~/Downloads/Database/Transactions6', what = 'character') %>% strtoi(base = 10L)
read.fwf('~/Downloads/Database/Transactions6')
read.fwf('~/Downloads/Database/Transactions6', widths = 100)
plot_expense_trend("Eating out")
devtools::document()
devtools::load_all(".")
devtools::load_all(".")
devtools::document()
devtools::load_all(".")
plot_expense_trend("Eating out")
plot_data = clean_data %>% filter(account == account_to_filter, category %in% category_to_plot) %>%
mutate(month = lubridate::floor_date(date, bin_by)) %>%
group_by(month) %>%
summarise_(.dots = c("agg_type" = "aggregate_expenses(amount, agg_type)")) %>%
ungroup()
plot_data
clean_data %>% filter(account == account_to_filter, category %in% category_to_plot) %>%
mutate(month = lubridate::floor_date(date, bin_by))
clean_data %>% filter(account == account_to_filter, category %in% category_to_plot) %>%
mutate(month = lubridate::floor_date(date, bin_by)) %>%
group_by(month) %>%
summarise_(.dots = c("agg_type" = "aggregate_expenses(amount, agg_type)")) %>%
ungroup()
plot_data = clean_data %>% filter(account == account_to_filter, category %in% category_to_plot) %>%
mutate(month = lubridate::floor_date(date, bin_by)) %>%
group_by(month) %>%
summarise_(.dots = c(agg_type = "aggregate_expenses(amount, agg_type)")) %>%
ungroup()
plot_data
plot_data = clean_data %>% filter(account == account_to_filter, category %in% category_to_plot) %>%
mutate(month = lubridate::floor_date(date, bin_by)) %>%
group_by(month) %>%
summarise_(.dots = c(eval(agg_type) = "aggregate_expenses(amount, agg_type)")) %>%
ungroup()
plot_data = clean_data %>% filter(account == account_to_filter, category %in% category_to_plot) %>%
mutate(month = lubridate::floor_date(date, bin_by)) %>%
group_by(month) %>%
summarise_(.dots = c('eval(agg_type)' = "aggregate_expenses(amount, agg_type)")) %>%
ungroup()
plot_data
plot_data = clean_data %>% filter(account == account_to_filter, category %in% category_to_plot) %>%
mutate(month = lubridate::floor_date(date, bin_by)) %>%
group_by(month) %>%
summarise_(.dots = c(~agg_type = "aggregate_expenses(amount, agg_type)")) %>%
ungroup()
clean_data %>% filter(account == account_to_filter, category %in% category_to_plot) %>%
mutate(month = lubridate::floor_date(date, bin_by)) %>%
group_by(month) %>%
summarise_(.dots = c(~agg_type = "aggregate_expenses(amount, agg_type)"))
plot_data = clean_data %>% filter(account == account_to_filter, category %in% category_to_plot) %>%
mutate(month = lubridate::floor_date(date, bin_by)) %>%
group_by(month) %>%
summarise_(!!aggregate_expenses(amount, agg_type)) %>%
ungroup()
clean_data
plot_data = clean_data %>% filter(account == account_to_filter, category %in% category_to_plot) %>%
mutate(month = lubridate::floor_date(date, bin_by)) %>%
group_by(month) %>%
summarise_(aggregate_expenses(!!amount, agg_type)) %>%
ungroup()
plot_data = clean_data %>% filter(account == account_to_filter, category %in% category_to_plot) %>%
mutate(month = lubridate::floor_date(date, bin_by)) %>%
group_by(month) %>%
summarise_(aggregate_expenses(!!sym(amount), agg_type)) %>%
ungroup()
plot_data = clean_data %>% filter(account == account_to_filter, category %in% category_to_plot) %>%
mutate(month = lubridate::floor_date(date, bin_by)) %>%
group_by(month) %>%
summarise_(aggregate_expenses(amount, agg_type)) %>%
ungroup()
plot_data = clean_data %>% filter(account == account_to_filter, category %in% category_to_plot) %>%
mutate(month = lubridate::floor_date(date, bin_by)) %>%
group_by(month) %>%
summarise(aggregate_expenses(amount, agg_type)) %>%
ungroup()
plot_data
plot_data = clean_data %>% filter(account == account_to_filter, category %in% category_to_plot) %>%
mutate(month = lubridate::floor_date(date, bin_by)) %>%
group_by(month) %>%
summarise_(.dots = setNames(aggregate_expenses(amount, agg_type), agg_type)) %>%
ungroup()
plot_data = clean_data %>% filter(account == account_to_filter, category %in% category_to_plot) %>%
mutate(month = lubridate::floor_date(date, bin_by)) %>%
group_by(month) %>%
summarise_(.dots = setNames("aggregate_expenses(amount, agg_type)", agg_type)) %>%
ungroup()
plot_data
ggplot(plot_data) +
geom_bar(aes(x = month, y = amount), stat = 'identity', fill = 'steelblue')
ggplot(plot_data) +
geom_bar(aes(x = month, y = agg_type), stat = 'identity', fill = 'steelblue')
ggplot(plot_data) +
geom_bar(aes_(x = "month", y = agg_type), stat = 'identity', fill = 'steelblue')
?aes_
ggplot(plot_data) +
geom_bar(aes_(x = month, y = plot_data[[agg_type]]), stat = 'identity', fill = 'steelblue')
ggplot(plot_data) +
geom_bar(aes(x = month, y = plot_data[[agg_type]]), stat = 'identity', fill = 'steelblue')
plot_data = clean_data %>% filter(account == account_to_filter, category %in% category_to_plot) %>%
mutate_(.dots = setNames("lubridate::floor_date(date, bin_by)", bin_by)) %>%
group_by(!!bin_by) %>%
summarise_(.dots = setNames("aggregate_expenses(amount, agg_type)", agg_type)) %>%
ungroup()
plot_data
clean_data %>% filter(account == account_to_filter, category %in% category_to_plot) %>%
mutate_(.dots = setNames("lubridate::floor_date(date, bin_by)", bin_by))
plot_data = clean_data %>% filter(account == account_to_filter, category %in% category_to_plot) %>%
mutate_(.dots = setNames("lubridate::floor_date(date, bin_by)", bin_by)) %>%
group_by(!!bin_by) %>%
summarise_(.dots = setNames("aggregate_expenses(amount, agg_type)", agg_type)) %>%
ungroup()
plot_data
plot_data = clean_data %>% filter(account == account_to_filter, category %in% category_to_plot) %>%
mutate_(.dots = setNames("lubridate::floor_date(date, bin_by)", bin_by)) %>%
group_by_(bin_by) %>%
summarise_(.dots = setNames("aggregate_expenses(amount, agg_type)", agg_type)) %>%
ungroup()
plot_data
bin_by = 'month'
plot_data = clean_data %>% filter(account == account_to_filter, category %in% category_to_plot) %>%
mutate_(.dots = setNames("lubridate::floor_date(date, bin_by)", bin_by)) %>%
group_by_(bin_by) %>%
summarise_(.dots = setNames("aggregate_expenses(amount, agg_type)", agg_type)) %>%
ungroup()
plot_data
Q
library(monefystats)
devtools::load_all(".")
plot_expense_trend("Eating out")
devtools::load_all(".")
plot_data = clean_data %>% filter(account == account_to_filter, category %in% category_to_plot) %>%
mutate_(.dots = setNames("lubridate::floor_date(date, bin_by)", bin_by)) %>%
group_by_(bin_by) %>%
summarise_(.dots = setNames("aggregate_expenses(amount, agg_type)", agg_type)) %>%
ungroup()
devtools::load_all(".")
plot_expense_trend("Eating out")
plot_data = clean_data %>% filter(account == account_to_filter, category %in% category_to_plot) %>%
mutate_(.dots = setNames("lubridate::floor_date(date, bin_by)", bin_by)) %>%
group_by_(bin_by) %>%
summarise_(.dots = setNames("aggregate_expenses(amount, agg_type)", agg_type)) %>%
ungroup()
clean_data
amount
n()
devtools::load_all(".")
devtools::load_all(".")
devtools::document()
plot_expense_trend("Eating out")
plot_expense_trend("Eating out", agg_type = 'count')
plot_expense_trend("Eating out", agg_type = 'mean')
plot_expense_trend("Eating out")
plot_expense_trend("Eating out", agg_type = 'mean')
plot_expense_trend("Eating out", agg_type = 'count')
plot_expense_trend("Eating out", agg_type = 'mean')
plot_expense_trend("Eating out", agg_type = 'count')
plot_expense_trend("Eating out")
?q
1,467,297,469
13553060
13553060-389824
1467297469 - 419771263
?DBI::dbConnect
?dbsendquery
?dbSendquery
?dbSendQuery
